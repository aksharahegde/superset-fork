user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log info;
pid        /var/run/nginx.pid;

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  ignore_invalid_headers off;

  # Hide server related info from client
  server_tokens off;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main;

  sendfile        on;

  keepalive_timeout  300;
  proxy_read_timeout 300s;

  upstream app {
    server superset:8088;
  }

  # set client body size to 5M #
  client_max_body_size 500M;

  server {
    listen 80;
    listen 443 ssl;

    server_name example.com; # rename to appropriate server

    ssl_certificate /etc/nginx/fullchain.pem;
    ssl_certificate_key /etc/nginx/privkey.pem;
    add_header Strict-Transport-Security "max-age=31536000";

    if ($http_x_forwarded_proto = 'http') {
      return 301 https://$server_name$request_uri;
    }

    location / {
      # checks for static file, if not found proxy to app
      try_files $uri @proxy_to_app;
    }

    # cookiecutter-django app
    location @proxy_to_app {
      proxy_pass http://app;
      proxy_redirect off;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # redirect server error pages to the static page /50x.html
    error_page 500 502 503 504  /50x.html;
    location = /50x.html {
      root html;
    }
  }
}

